[
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/",
	"title": "AWS Free Tier 2025",
	"tags": [],
	"description": "",
	"content": "AWS Free Tier 2025 Overview A detailed and comprehensive guide about the new AWS Free Tier - Amazon Web Services\u0026rsquo; revolutionary free program with $200 credit and many breakthrough improvements for accounts created after July 15, 2025.\n⚠️ IMPORTANT NOTE: This guide only applies to AWS accounts created AFTER July 15, 2025. If you created your account before this date, please refer to old AWS Free Tier.\n✅ VERIFIED: All information in this guide has been checked and verified with AWS Official Documentation in January 2025.\nKey Highlights Get $200 credit instantly ($100 initial + $100 from 5 tasks) 2 plan options: Free Account Plan vs Paid Account Plan 6-month learning roadmap from beginner to expert Sample architectures with detailed cost breakdown List of expensive services to avoid Advanced monitoring and cost optimization Comprehensive FAQ answering all questions Scripts and tools for automated cost optimization Table of Contents AWS Free Tier 2025: Revolution! Detailed Comparison: Free Plan vs Paid Plan Strategy to Get Full $200 Credit Detailed Guide for 5 \u0026ldquo;Money-Making\u0026rdquo; Tasks List of Credit \u0026ldquo;Killers\u0026rdquo; to Avoid Sample Architectures with $200 Credit Monitoring and Cost Optimization FAQ - Answering All Questions AWS Learning Roadmap with Free Tier Summary and Next Steps "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/1-aws-free-tier-2025-revolution/",
	"title": "AWS Free Tier 2025: Revolution!",
	"tags": [],
	"description": "",
	"content": "Breakthrough Changes AWS has revolutionized the Free Tier program with major changes starting from July 15, 2025:\nBefore (Old Free Tier) Only 12 months free No initial credit Complex usage tracking Easy to incur unexpected charges Now (Free Tier 2025) $100 credit upon registration Additional $100 credit from 5 simple tasks 2 plan options to fit your needs 6-month protection from charges (Free Plan) 30+ Always Free services with unlimited duration Overall Comparison Feature Old Free Tier Free Tier 2025 Initial Credit $0 $100 Additional Credit None $100 (from 5 tasks) Protection Period 12 months 6 months (Free Plan) Plan Options 1 plan 2 plans (Free/Paid) Always Free Yes Yes (30+ services) Auto-close Account No Yes (Free Plan) "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/2-so-s%C3%A1nh-chi-ti%E1%BA%BFt-free-plan-vs-paid-plan/",
	"title": "Detailed Comparison: Free Plan vs Paid Plan",
	"tags": [],
	"description": "",
	"content": "Free Account Plan Best suited for:\nBeginner developers Students learning about cloud Startups building prototypes Researchers needing temporary resources Advantages:\nNo charges for 6 months Full $200 credit Automatic protection from charges 30+ Always Free services Auto-close when credit/time expires Limitations:\nNo access to some expensive services Cannot purchase Reserved Instances Not eligible for other promotional credits Automatic upgrade in certain cases Paid Account Plan Best suited for:\nProduction applications Scaling beyond Free Tier Enterprise customers Need full access to AWS services Advantages:\nFull access to all AWS services Full $200 credit Short-term trials for select services Eligible for other promotional credits No auto-close of account Disadvantages:\nCharges apply when exceeding credit balance Need careful cost management Risk of unexpected charges Detailed Comparison Table Feature Free Plan Paid Plan Sign-up Credit $100 $100 Activity Credits $100 $100 Always Free Services ✅ ✅ Short-term Trials ❌ ✅ All AWS Services ❌ ✅ Charges Beyond Credit ❌ ✅ Account Auto-close ✅ ❌ Promotional Credits ❌ ✅ Reserved Instances ❌ ✅ AWS Marketplace ❌ ✅ "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/3-chi%E1%BA%BFn-l%C6%B0%E1%BB%A3c-nh%E1%BA%ADn-%C4%91%E1%BB%A7-200-credit/",
	"title": "Strategy to Get Full $200 Credit",
	"tags": [],
	"description": "",
	"content": "Step 1: Get First $100 Credit How to:\nVisit AWS Free Tier\nClick Create Account Enter Required Information\nEnter User email Enter AWS account name Click Verify email address Submit security verification Enter Verification Code sent to your email Click Verify Enter Password Click Continue Choose Free Plan or Paid Plan\nIn this guide, we will choose Paid Plan to access all AWS services and features without limitations Click Choose Paid Plan Complete registration with valid information\nSelect Personal - for your own projects Enter valid information Check the box I have read and agree to the terms Click Agree and continue Complete Payment Information\nEnter Valid card information Click Verify and continue Verify Phone Number\nSelect Text message or Voice call Select Country or region code Enter Mobile phone number (Remove leading 0, e.g., 945123456) Click Send SMS if you chose Text message authentication Enter Verification code Click Continue Complete registration\nSelect Basic support - Free Click Complete sign up Click Go to the Console Change language to English(US) $100 credit will be added automatically\nTime: Immediately after creating account Check: AWS Billing Console Select Credits section to verify $100 credit has been added successfully Step 2: Earn Additional $100 from 5 Tasks Location: Find the \u0026ldquo;Explore AWS\u0026rdquo; widget on AWS Console Home 5 Required Tasks:\nLaunch EC2 Instance - $20 credit Use Amazon Bedrock Playground - $20 credit Set up AWS Budgets - $20 credit Create Lambda Web App - $20 credit Create RDS Database - $20 credit Completion Time: 2-4 hours for all tasks\nPro Tips:\nComplete tasks in order to optimize learning curve Use smallest instance sizes Clean up resources after each task Document the process for future reference Credit Timeline Day 1: Create account → $100 ✅ Day 2-3: Complete 5 tasks → $100 ✅ Total: $200 credit in 3 days "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/4-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn-chi-ti%E1%BA%BFt-5-nhi%E1%BB%87m-v%E1%BB%A5-ki%E1%BA%BFm-ti%E1%BB%81n/",
	"title": "Detailed Guide for 5 &#34;Money-Making&#34; Tasks",
	"tags": [],
	"description": "",
	"content": "Task 1: Launch EC2 Instance - $20 credit Objective: Create and manage virtual machines on AWS cloud\nSteps:\nAccess EC2 Console Select task Launch an instance using EC2 Click Start activity Create Instance Enter Instance name Test Instance Click Next Select AMI Click Next Select Hardware (But in this tutorial, we\u0026rsquo;ll keep the default Hardware) Click Next Click Create new key pair Enter Key pair name first-kp Select RSA Select .pem Click Create key pair Select Key pair just created Click Next Click Next Select Create security group Keep the default Checkboxes Click Next Click Next Review các Settings và Select Launch Instance Create EC2 Instance Successfully Click Next Click Next Click Instance id trên thanh thông báo Create Instance Successfully Click Finish Clean Up Terminate instance sau khi hoàn thành Click Instance state Click Terminate (delete) instance Click Terminate (delete) Delete Successfully Task 2: Amazon Bedrock Playground - $20 credit Objective: Experience AI/ML with foundation models\nSteps:\nFind the widget \u0026ldquo;Explore AWS\u0026rdquo; on AWS Console Home Access Bedrock Console Select task Use a foundation model in the Amazon Bedrock Click Start activity Select Model Click Select model Select Claude 3 Haiku Click Apply Enter Complete valid information Enter content for Describe your use case Development and Testing Environment: Evaluating various foundation models (Claude, Llama, Titan, etc.) to identify the best-fit solution for our web application requirements. This includes testing model performance, response quality, latency, and cost-effectiveness across different use cases. Click Submit use case details If no errors occur, continue to step Create Prompt However, if you encountered an error as shown below, proceed to Raise support to AWS with the following steps Click Create case Select Account and billing Service: Account Activation Category: Bedrock Allowlisting Severity: General question Click Next step Enter Subject: Request approval for Anthropic Claude model access Enter Description I submitted my use case details for Anthropic Claude models through the Amazon Bedrock console, but I\u0026#39;m receiving an authorization error when trying to enable model access:\r\u0026#34;Your account is not authorized to perform this action.\u0026#34;\rI have completed the use case submission form with details about my development and testing requirements for web application integration.\rCould you please review and approve access to Anthropic Claude models or another models for my account?\rAccount ID: [Your AWS Account ID]\rRegion: [your preferred region]\rThank you. Replace [Your AWS Account ID] with your Account ID Replace [your preferred region] with your desired Region Enter Complete valid information Click Next Step Select Contact us Select Web Click Submit You have Raised support to AWS successfully. The support team will contact you within 24 hours. Meanwhile, we\u0026rsquo;ll continue with the remaining tasks: Set up a cost budget using AWS Budgets Create a web app using AWS Lambda Create an Amazon RDS Database 5. Create Prompt If you have Applied or Received support successfully, let\u0026rsquo;s continue with the following steps Submit a prompt Click Run Click Next Review The response and Click Finish Task 3: Set up AWS Budgets - $20 credit Objective: Set up cost monitoring and alerts\nSteps:\nFind the widget \u0026ldquo;Explore AWS\u0026rdquo; on AWS Console Home Access Budgets Console Select task Set up a cost budget using AWS Budgets Click Start activity Click Next Click Next Enter Email to receive notifications Click Next Click Create budget Budget created successfully Task 4: Create Lambda Web App - $20 credit Objective: Build serverless web application\nSteps:\nFind the widget \u0026ldquo;Explore AWS\u0026rdquo; on AWS Console Home Access Lambda Console Select task Create a web app using AWS Lambda Click Start activity Select Use a blueprint Click Next Select Getting started with Lambda HTTP Click Next Enter http-function-url-tutorial Click Next Select Checkbox Acknowledgment Click Next Click Create function Create function Successfully Click Next Click Finish Click Actions Click Delete function Click Delete Delete Successfully Task 5: Create RDS Database - $20 credit Objective: Set up managed relational database\nSteps:\nFind the widget \u0026ldquo;Explore AWS\u0026rdquo; on AWS Console Home Access RDS Console Select task Create an Amazon RDS Database Click Start activity Create database Select Easy create Click Next Select Aurora (PostgreSQL Compatible) Click Next Click Next Click Create database Click Finish Wait for all Database to change to Available Clean up Select database-1-instance-1 Click Actions Click Delete Enter delete me Click Delete Select database-1 Click Actions Click Delete Uncheck Create final snapshot Select Checkbox Acknowledgment Enter delete me Click Delete DB cluster Delete Successfully Congratulations! You have completed all tasks and received $200 credit Or check if you have received enough 200$ credit here! If you encountered an error in the Bedrock task and have been Supported successfully, please return to task Use a foundation model in the Amazon Bedrock to complete it, or if it hasn\u0026rsquo;t been resolved yet, you can continue with the following sections "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/5-danh-s%C3%A1ch-s%C3%A1t-th%E1%BB%A7-credit-c%E1%BA%A7n-tr%C3%A1nh/",
	"title": "List of Credit &#34;Killers&#34; to Avoid",
	"tags": [],
	"description": "",
	"content": "Tier 1: Extremely Dangerous (Can drain $200 in hours) Amazon SageMaker Training Jobs: $1-10/hour per instance Notebook Instances: $0.0464-4.32/hour Endpoints: $0.048-4.32/hour ** Warning:** Easy to forget to turn off, auto-scaling GPU Instances (EC2) p3.2xlarge: $3.06/hour p4d.24xlarge: $32.77/hour g4dn.xlarge: $0.526/hour ** Warning:** Very expensive, no Free Tier Amazon Redshift dc2.large: $0.25/hour ra3.xlplus: $3.26/hour ** Warning:** Minimum cluster size, hard to optimize Defense Strategy 1. Set up Billing Alerts Access Billing and cost management Select Budgets tab Click Create Budgets Select Customize Select Cost budget Click Next Enter Budget name: My-200$-budget Period: Monthly Select Recurring budget Budgeting method: Fixed Budget amount: 200.00 Select All AWS Services Select Unblended costs Click Next Click Add alert threshold Enter and create 4 alerts sequentially: 12.5, 25, 50, 75 Enter Email recipients for each alert Check if all alerts have been created completely Click Next Review and click Create Budget Congratulations, you have successfully created a Budget to continue using AWS \u0026quot;safely\u0026quot; 2. Daily Cost Monitoring Check Cost Explorer daily Review \u0026ldquo;Daily Spend\u0026rdquo; and \u0026ldquo;Service Breakdown\u0026rdquo; Set up Cost Anomaly Detection 3. Automated Cleanup Script #!/bin/bash # Automated cleanup script (run daily) # Stop all running EC2 instances tagged for shutdown aws ec2 describe-instances --filters \u0026#34;Name=tag:AutoShutdown,Values=yes\u0026#34; \\ --query \u0026#39;\u0026#39;Reservations[].Instances[?State.Name==``running``].InstanceId\u0026#39;\u0026#39; \\ --output text | xargs -r aws ec2 stop-instances --instance-ids # Delete unattached EBS volumes older than 7 days aws ec2 describe-volumes --filters \u0026#34;Name=status,Values=available\u0026#34; \\ --query \u0026#39;\u0026#39;Volumes[?CreateTime\u0026lt;=``2024-01-01``].VolumeId\u0026#39;\u0026#39; \\ --output text | xargs -r aws ec2 delete-volume --volume-id Safe Services for Free Tier Always Safe (generous Free Tier) Lambda: 1M requests/month free DynamoDB: 25GB storage + 25 RCU/WCU free S3: 5GB storage + 20,000 GET requests free CloudWatch: 10 metrics + 1M API requests free SNS: 1M publishes free SES: 62,000 emails free Safe with Caution EC2: t2.micro/t3.micro only RDS: db.t3.micro only ElastiCache: cache.t3.micro only API Gateway: Monitor request count "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/6-ki%E1%BA%BFn-tr%C3%BAc-m%E1%BA%ABu-v%E1%BB%9Bi-200-credit/",
	"title": "Sample Architectures with $200 Credit",
	"tags": [],
	"description": "",
	"content": "Architecture 1: Simple Web Application - $80-120/6 months Use Case: Personal blog, portfolio website, startup MVP\nComponents: Cost Breakdown (Optimized):\nCloudFront: $2/month × 6 = $12 S3: $0.17/month × 6 = $1 ALB: $16.51/month × 6 = $99 EC2 t3.micro (1 instance): $7.59/month × 6 = $45.50 RDS db.t3.micro Single-AZ: $12.41/month × 6 = $74.50 Total: ~$232 (You can consider ditching ALB and running Single AZ if the cost is too high) Architecture 2: Serverless Application - $60-100/6 months Use Case: API backend, microservices, event-driven apps\nComponents: Cost Breakdown:\nAssumptions: ~1000 prompts/month, Haiku 3 model, 500 tokens average CloudFront: $4.75/month × 6 = $28.50 Amplify (S3): $0.17/month × 6 = $1 Lambda: $0.83/month × 6 = $5 Bedrock (Haiku 3): $0.75/month × 6 = $4.50 DynamoDB: $2.50/month × 6 = $15 Cognito: Free tier = $0 CloudWatch: $0.50/month × 6 = $3 SNS (optional): $0.50/month × 6 = $3 Total: ~$60 ✅ Advantages:\nVery cost-effective Auto-scaling No server management High availability "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/7-monitoring-v%C3%A0-t%E1%BB%91i-%C6%B0u-chi-ph%C3%AD/",
	"title": "Monitoring and Cost Optimization",
	"tags": [],
	"description": "",
	"content": "Cost Optimization Framework Level 1: Basic Monitoring (Day 1-7) Basic Setup:\nAWS Budgets\nCreate Budgets to ensure \u0026quot;safe AWS usage\u0026quot; and timely response measures Budget 1: $50/month (Alert at 80%) Budget 2: $25/month (Alert at 50%) Budget 3: $10/day (Alert at 100%) Billing Alerts\nCreate CloudWatch Alarms: $25 threshold Email warning $50 threshold Email + SMS $75 threshold Email + SMS + Slack Cost Explorer\nEnable daily cost reports Set up service-level breakdown Monitor top 5 cost drivers Level 2: Advanced Analytics (Week 2-4) Deep Dive Analysis:\nCustom CloudWatch Metrics\nimport boto3 def publish_cost_metrics(): ce = boto3.client(\u0026#39;\u0026#39;ce\u0026#39;\u0026#39;) cw = boto3.client(\u0026#39;\u0026#39;cloudwatch\u0026#39;\u0026#39;) # Get daily cost response = ce.get_cost_and_usage( TimePeriod={ \u0026#39;\u0026#39;Start\u0026#39;\u0026#39;: \u0026#39;\u0026#39;2025-01-01\u0026#39;\u0026#39;, \u0026#39;\u0026#39;End\u0026#39;\u0026#39;: \u0026#39;\u0026#39;2025-01-02\u0026#39;\u0026#39; }, Granularity=\u0026#39;\u0026#39;DAILY\u0026#39;\u0026#39;, Metrics=[\u0026#39;\u0026#39;BlendedCost\u0026#39;\u0026#39;] ) cost = float(response[\u0026#39;\u0026#39;ResultsByTime\u0026#39;\u0026#39;][0][\u0026#39;\u0026#39;Total\u0026#39;\u0026#39;][\u0026#39;\u0026#39;BlendedCost\u0026#39;\u0026#39;][\u0026#39;\u0026#39;Amount\u0026#39;\u0026#39;]) # Publish to CloudWatch cw.put_metric_data( Namespace=\u0026#39;\u0026#39;AWS/Billing/Custom\u0026#39;\u0026#39;, MetricData=[ { \u0026#39;\u0026#39;MetricName\u0026#39;\u0026#39;: \u0026#39;\u0026#39;DailyCost\u0026#39;\u0026#39;, \u0026#39;\u0026#39;Value\u0026#39;\u0026#39;: cost, \u0026#39;\u0026#39;Unit\u0026#39;\u0026#39;: \u0026#39;\u0026#39;None\u0026#39;\u0026#39; } ] ) Resource Tagging Strategy\nMandatory Tags: - Project: project-name - Environment: dev/staging/prod - Owner: email@domain.com - CostCenter: department - AutoShutdown: true/false - CreatedDate: YYYY-MM-DD Emergency Cost Control Critical Actions (\u0026gt;$150 spent) Immediate Resource Audit\n# Find most expensive resources aws ce get-cost-and-usage \\ --time-period Start=2025-01-01,End=2025-01-31 \\ --granularity MONTHLY \\ --metrics BlendedCost \\ --group-by Type=DIMENSION,Key=SERVICE Emergency Shutdown Protocol\n# Stop all non-critical instances aws ec2 stop-instances --instance-ids $( aws ec2 describe-instances \\ --filters \u0026#34;Name=tag:Critical,Values=false\u0026#34; \\ --query \u0026#39;\u0026#39;Reservations[].Instances[?State.Name==``running``].InstanceId\u0026#39;\u0026#39; \\ --output text ) "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/8-faq---gi%E1%BA%A3i-%C4%91%C3%A1p-m%E1%BB%8Di-th%E1%BA%AFc-m%E1%BA%AFc/",
	"title": "FAQ - Answering All Questions",
	"tags": [],
	"description": "",
	"content": "AWS Free Tier 2025 Basics ❓Q1: How is AWS Free Tier 2025 different from the old Free Tier? A: Key differences:\n$200 credit ($100 initial + $100 from tasks) instead of $0 2 plan options (Free Plan vs Paid Plan) instead of 1 plan 6-month protection (Free Plan) instead of 12 months Auto-close account when credit expires (Free Plan) 30+ Always Free services remain unchanged ❓Q2: I have an AWS account from 2024, am I eligible for Free Tier 2025? A: No. AWS Free Tier 2025 only applies to accounts created after July 15, 2025. Old accounts still use the traditional Free Tier.\n❓Q3: Should I choose Free Plan or Paid Plan? A:\nFree Plan if: Learning, experimenting, prototyping, don\u0026rsquo;\u0026rsquo;t need production services Paid Plan if: Building production apps, need full service access, have AWS experience Credit and Billing ❓Q4: How do I check my remaining credit? A: Access AWS Billing Console Credits section to view details.\n❓Q5: Can credits be transferred to another account? A: No. Credits only apply to the granted account and cannot be transferred.\n❓Q6: Which services are NOT covered by credits? A: Some services don\u0026rsquo;\u0026rsquo;t apply credits:\nReserved Instances Savings Plans AWS Marketplace (some products) Support Plans Domain registration 5 Credit-Earning Tasks ❓Q7: Can I complete the 5 tasks multiple times to get more credits? A: No. Each task only counts for credit once.\n❓Q8: If I make a mistake on a task, can I retry? A: Yes. You can retry the task until you complete it correctly.\n❓Q9: Which task is hardest and easiest? A:\nEasiest: Set up AWS Budgets (10-15 minutes) Hardest: Create RDS Database (30-40 minutes + waiting time) Troubleshooting ❓Q10: Why am I being charged even though I have credits? A: Possible reasons:\nUsing services not covered by credits Exceeding Free Tier limits Using resources in non-eligible regions Data transfer charges ❓Q11: How do I avoid unexpected charges? A:\nSet up billing alerts at multiple thresholds Use AWS Budgets with strict limits Enable Cost Anomaly Detection Review costs daily in the first week ❓Q12: When does the Free Plan account auto-close? A: When:\n6 months from account creation, OR Credit balance = $0 Whichever comes first "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/9-roadmap-h%E1%BB%8Dc-aws-v%E1%BB%9Bi-free-tier/",
	"title": "AWS Learning Roadmap with Free Tier",
	"tags": [],
	"description": "",
	"content": "6-Month Learning Journey Month 1-2: AWS Fundamentals Budget: $50-70\nLearning Objectives:\nUnderstand AWS global infrastructure Master core services (EC2, S3, IAM, VPC) Basic security and networking AWS CLI and SDK basics Curriculum:\nWeek 1: Getting Started\nComplete 5 credit-earning tasks Set up billing alerts and budgets Explore AWS Console Create first EC2 instance Hands-on: Deploy simple web server Week 2: Storage \u0026amp; Databases\nS3 buckets and lifecycle policies EBS volumes and snapshots RDS setup and management Hands-on: Build file upload system Week 3: Networking\nVPC concepts and setup Security Groups vs NACLs Internet Gateway and NAT Hands-on: Multi-tier network architecture Week 4: Identity \u0026amp; Security\nIAM users, groups, roles Policies and permissions MFA setup Hands-on: Secure multi-user environment Projects:\nPersonal Blog Website\nEC2 + RDS + S3 Cost: ~$25/month File Sharing System\nS3 + Lambda + API Gateway Cost: ~$10/month Month 3-4: Intermediate Services Budget: $60-80\nLearning Objectives:\nServerless computing with Lambda API development with API Gateway Container basics with ECS Monitoring with CloudWatch Curriculum:\nWeek 5: Serverless Computing\nLambda functions and triggers API Gateway setup DynamoDB operations Hands-on: REST API backend Week 6: Application Integration\nSQS and SNS messaging EventBridge event routing Step Functions workflows Hands-on: Event-driven architecture Week 7: Containers \u0026amp; Orchestration\nDocker basics ECS clusters and services ECR container registry Hands-on: Containerized web app Week 8: Monitoring \u0026amp; Logging\nCloudWatch metrics and alarms CloudTrail audit logging X-Ray distributed tracing Hands-on: Comprehensive monitoring setup Projects: 3. Serverless Todo API\nLambda + API Gateway + DynamoDB Cost: ~$15/month Microservices Architecture ECS + ALB + RDS Cost: ~$35/month Month 5-6: Advanced Architecture Budget: $70-90\nLearning Objectives:\nDesign scalable architectures Implement CI/CD pipelines Advanced security practices Cost optimization strategies Curriculum:\nWeek 9: Advanced Networking\nVPC Peering and Transit Gateway Direct Connect concepts CloudFront CDN setup Hands-on: Global application architecture Week 10: DevOps \u0026amp; CI/CD\nCodeCommit, CodeBuild, CodeDeploy CodePipeline automation Infrastructure as Code (CloudFormation) Hands-on: Automated deployment pipeline Week 11: Advanced Security\nAWS WAF and Shield Secrets Manager Certificate Manager Hands-on: Secure production environment Week 12: Optimization \u0026amp; Best Practices\nCost optimization techniques Performance tuning Disaster recovery planning Hands-on: Production-ready architecture Projects: 5. E-commerce Platform\nMulti-tier architecture Auto-scaling, load balancing Cost: ~$45/month Data Analytics Pipeline S3 + Glue + Athena + QuickSight Cost: ~$25/month Certification Path AWS Cloud Practitioner (Month 2) Exam Cost: $100 Preparation: 2-3 weeks Success Rate: 90%+ with proper preparation AWS Solutions Architect Associate (Month 4-5) Exam Cost: $150 Preparation: 4-6 weeks Success Rate: 70%+ with hands-on experience AWS Solutions Architect Professional (Month 6+) Exam Cost: $300 Preparation: 8-12 weeks Success Rate: 50%+ with extensive experience Learning Resources Free Resources: AWS Skill Builder - Official training AWS Documentation - Comprehensive guides AWS Architecture Center - Best practices AWS re:Invent Videos - Latest updates AWS Special Force Portal - Cloud innovation roadmap AWS Study Group YouTube Channel Lab system - lab documentation Community Resources: AWS Community Builders AWS User Groups Reddit: r/aws, r/AWSCertifications Discord: AWS Community servers "
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/10-t%E1%BB%95ng-k%E1%BA%BFt-v%C3%A0-next-steps/",
	"title": "Summary and Next Steps",
	"tags": [],
	"description": "",
	"content": "🎉 Congratulations! You have completed the AWS Free Tier 2025 Guide After reading and practicing with this guide, you have:\n✅ Understood AWS Free Tier 2025 and how to optimize $200 credit ✅ Know how to complete 5 tasks to get full credit ✅ Learned about \u0026quot;dangerous\u0026quot; services to avoid ✅ Have a detailed 6-month learning roadmap ✅ Know how to monitor and optimize costs 🎯 Next Steps - Your Journey Ahead 🚀 Immediate Actions (Next Week): Create AWS Account with Free Plan or Paid Plan Complete 5 tasks to get $200 credit Set up billing alerts and budgets Start first project from sample architectures 📈 Short-term Goals (1-3 months): Master AWS fundamentals (EC2, S3, IAM, VPC) Build 2-3 projects with increasing complexity Prepare for AWS Cloud Practitioner certification Join AWS community and networking 🏆 Long-term Vision (6-12 months): Achieve AWS certifications (Associate level) Build production-ready applications Contribute to open source AWS projects Land cloud engineering role 💡 Pro Tips for Success 🎯 Learning Strategy: 80/20 Rule: 80% hands-on practice, 20% theory Build in public: Share projects on GitHub Document everything: Blog about learning journey Network actively: Join AWS communities 💰 Cost Management: Monitor daily in first month Set conservative budgets and stick to them Clean up resources after each experiment Plan for scale beyond Free Tier 🚀 Career Development: Build portfolio with diverse AWS projects Get certified to validate skills Contribute to community through blog posts, talks Stay updated with AWS announcements 🤝 Community \u0026amp; Support 🌟 Join Our Community: GitHub: Star and contribute to this repo Discord: AWS Vietnam Community LinkedIn: AWS Professionals Network Meetups: Local AWS User Groups Get Help: AWS Support: Basic support included Stack Overflow: aws tag Reddit: r/aws community AWS re:Post: Official Q\u0026amp;A platform ⭐ Support This Project If this guide is helpful, please:\n🔄 Share with friends and colleagues 💬 Feedback to improve the guide 🤝 Contribute with pull requests Happy Learning!\nCreated with ❤️ by AWS Vietnam Community\nLast Updated: January 2025\nVersion: 2.0\nContributors: AWS enthusiasts worldwide\nContact \u0026amp; Support GitHub Issues: Report bugs Discussions: Join conversations Facebook: AWS Study Group VN ** 2025 AWS Vietnam Community. Licensed under MIT License.**\n"
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://thinhnguyen1211.github.io/fcj-first-lab/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]